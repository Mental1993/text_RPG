/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.mainController;
import Model.Database;
import Model.Room;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.Timer;

/**
 *
 * @author Mental
 */
public class game extends javax.swing.JFrame {
    mainController controller = new mainController();
    Database db = new Database();
    /**
     * Creates new form NewJFrame
     */
    public game() {
        initComponents();
        setSize(900,500);
        
        
        ImageIcon bgImgPanel = new ImageIcon("img/frame.png");
        JLabel background = new JLabel(bgImgPanel);
        db.connect();
        db.getRooms();
        Room.currRoom = Room.roomList.get(0);
        getContentPane().setBackground(new Color(255, 191, 128));
        TFinput.addActionListener(action);
        
        
        //update timer
        SimpleDateFormat dateFormat = new SimpleDateFormat("h:mm:ss a", Locale.ENGLISH);
        Timer SimpleTimer = new Timer(1000, new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent ae) {
                mainController.currDate = new Date();
                String formatted = dateFormat.format(mainController.currDate);
                if(formatted.contains("PM")) {
                    mainController.isNight = true;
                }else {
                    mainController.isNight = false;
                }
                Ltime.setText(formatted);
            }
            
        });
        SimpleTimer.start();
        //update night or day
        Timer dayOrNight = new Timer(60000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                controller.updateNight();
            }
            
        });
        dayOrNight.start();
        db.fillRoomsWithItems();
        welcomeMessage();
        
        controller.updateImage(Limage, Database.getImageById(Room.currRoom.getRoomId()));  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TFinput = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TAoutput = new javax.swing.JTextArea();
        Ltime = new javax.swing.JLabel();
        hpBox = new javax.swing.JPanel();
        hpText = new javax.swing.JLabel();
        hpCurrent = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        hpMax = new javax.swing.JLabel();
        mpBox = new javax.swing.JPanel();
        mpText = new javax.swing.JLabel();
        mpCurr = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        mpMax = new javax.swing.JLabel();
        Limage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TFinput.setBackground(new java.awt.Color(229, 162, 97));
        TFinput.setFont(new java.awt.Font("Tempus Sans ITC", 0, 18)); // NOI18N
        TFinput.setForeground(new java.awt.Color(51, 51, 51));
        TFinput.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        TFinput.setName(""); // NOI18N

        jScrollPane1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        TAoutput.setEditable(false);
        TAoutput.setBackground(new java.awt.Color(229, 162, 97));
        TAoutput.setColumns(20);
        TAoutput.setFont(new java.awt.Font("Tempus Sans ITC", 0, 18)); // NOI18N
        TAoutput.setForeground(new java.awt.Color(51, 51, 51));
        TAoutput.setLineWrap(true);
        TAoutput.setRows(5);
        TAoutput.setBorder(null);
        TAoutput.setSelectionColor(new java.awt.Color(229, 162, 97));
        jScrollPane1.setViewportView(TAoutput);

        Ltime.setBackground(new java.awt.Color(153, 153, 153));
        Ltime.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        Ltime.setForeground(new java.awt.Color(182, 98, 7));
        Ltime.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Ltime.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        hpBox.setBackground(new java.awt.Color(0, 194, 6));
        hpBox.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        hpText.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        hpText.setText("HP : ");

        hpCurrent.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        hpCurrent.setText("20");

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setText("/");

        hpMax.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        hpMax.setText("20");

        javax.swing.GroupLayout hpBoxLayout = new javax.swing.GroupLayout(hpBox);
        hpBox.setLayout(hpBoxLayout);
        hpBoxLayout.setHorizontalGroup(
            hpBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hpBoxLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(hpText)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hpCurrent)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hpMax)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        hpBoxLayout.setVerticalGroup(
            hpBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hpBoxLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(hpBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hpText)
                    .addComponent(hpCurrent)
                    .addComponent(jLabel1)
                    .addComponent(hpMax))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mpBox.setBackground(new java.awt.Color(0, 255, 255));
        mpBox.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        mpText.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        mpText.setText("MP :");

        mpCurr.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        mpCurr.setText("20");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("/");

        mpMax.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        mpMax.setText("20");

        javax.swing.GroupLayout mpBoxLayout = new javax.swing.GroupLayout(mpBox);
        mpBox.setLayout(mpBoxLayout);
        mpBoxLayout.setHorizontalGroup(
            mpBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mpBoxLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(mpText)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mpCurr)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mpMax)
                .addContainerGap(36, Short.MAX_VALUE))
        );
        mpBoxLayout.setVerticalGroup(
            mpBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mpBoxLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mpBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mpText)
                    .addComponent(mpCurr)
                    .addComponent(jLabel2)
                    .addComponent(mpMax))
                .addGap(0, 8, Short.MAX_VALUE))
        );

        Limage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Limage.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 615, Short.MAX_VALUE)
                    .addComponent(TFinput))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(Ltime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(hpBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(mpBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                        .addComponent(Limage, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TFinput, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Ltime, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(Limage, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(157, 157, 157)
                        .addComponent(hpBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(mpBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new game().setVisible(true);
            }
        });
    }
    public Action action = new AbstractAction() {
        @Override
        public void actionPerformed(ActionEvent e) {
            String input = TFinput.getText();
            
            TAoutput.append("\n" + input + "\n");
            TFinput.setText("");
            controller.proccessInput(input);
            
            String output = controller.getTAoutput();
            controller.updateTextArea(TAoutput, output);
            TAoutput.setCaretPosition(TAoutput.getDocument().getLength());
            controller.updateImage(Limage, Database.getImageById(Room.currRoom.getRoomId()));
        }
    };
    
    
    public void welcomeMessage() {
        TAoutput.append("Type \"help\" to view all the commands of the game.\n\n\n");
        TAoutput.append("You wake up inside a spooky dungeon...Darkness surrounds you and you can barely see anything.\n");
        TAoutput.append("You feel numb as you try to get on your feet. Weakness through your body.\n");
        TAoutput.append("You can't tell for how long have you been knocked out.A mysterious sound comes from the south..\n");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Limage;
    private javax.swing.JLabel Ltime;
    private javax.swing.JTextArea TAoutput;
    private javax.swing.JTextField TFinput;
    private javax.swing.JPanel hpBox;
    private javax.swing.JLabel hpCurrent;
    private javax.swing.JLabel hpMax;
    private javax.swing.JLabel hpText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel mpBox;
    private javax.swing.JLabel mpCurr;
    private javax.swing.JLabel mpMax;
    private javax.swing.JLabel mpText;
    // End of variables declaration//GEN-END:variables
}
